FORMAT: 1A
HOST: https://api.voisee.jp

# Voisee API

## Authentication

The API server implements the OAuth2 protocol with the following routes

```
GET       /oauth/authorize/:code
GET       /oauth/authorize
POST      /oauth/authorize
PUT       /oauth/authorize
DELETE    /oauth/authorize
POST      /oauth/token
POST      /oauth/revoke
resources /oauth/applications
GET       /oauth/authorized_applications
DELETE    /oauth/authorized_applications/:id
GET       /oauth/token/info
```

See [doorkeeper](https://github.com/doorkeeper-gem/doorkeeper) gem documentation
for more information.

## Roles

There are three different roles:

* Store group
    * Owns an application
    * Can manage own application
    * Can manage all stores in a store group

* Store
    * Belongs to a store group
    * Do not own application
    * Can manage store page in store group application
    * Can upgrade/downgrade store plan

* User
    * Does not belong to a store group
    * Owns an application
    * Can manage own application
    * Can upgrade/downgrade plan

## Media Types

When applicable, this API returns JSON encoded
objects or arrays.
A list action will always return a JSON array,
while a get action will always return a JSON object.

## Pagination

All endpoints returning list accept the following parameters:

* min_id (optional, integer) ... The minimum ID to return. Default: `null`
* max_id (optional, integer) ... The maximum ID to return. Default: `null`
* count (optional, integer) ... The number of items to return. Default: `20`

All paginated responses contain the `X-Total-Count` header.

## Error States

The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

## Payment

All payments will use [WebPay](https://webpay.jp/).

# Group Store Group

A group of store representing either a mall, or a commercial district.


## Store group [/store_groups/{id}]

Requires Store group role.


### Get store group [GET]

Get information about the store group.

+ Response 200
    + Body

        ```json
        {
            "id": 1,
            "name": "某商店街"
        }
        ```

## Stores [/store_groups/{id}/stores]

### List stores [GET]

List all approved stores in the store group.
Requires Store group role.

+ Response 200
    + Body

        ```json
        [
            {
                "id": 1,
                "name": "Toranoko",
                "approved": true,
                "created_at": "2015-04-27T18:37:52+09:00",
                "updated_at": "2015-04-27T18:42:52+09:00"
            }
        ]
        ```

### Create store [POST]

Creates a store in the Store Group.
The store is not made public until the `stores/{id}/approve` API is called.

+ Request

    + Body

        ```json
        {
            "name": "Toranoko"
        }
        ```

+ Response 201

    [Store]

    + Body

        ```json
        {
            "id": 1,
            "name": "Toranoko",
            "approved": false,
            "created_at": "2015-04-27T18:37:52+09:00",
            "updated_at": "2015-04-27T18:42:52+09:00"
        }
        ```

# Group Store

## Approve store [/stores/{id}/approve]

Requires Store group role.

### Approve store [POST]

+ Response 204

## Store [/stores/{id}]

### Get a store [GET]

Requires Store group role or store role with `id` matching current store.

+ Response 200

    + Body

        ```json
        {
            "id": 1,
            "name": "Toranoko",
            "approved": true,
            "available_credit_card": false,
            "plan": {
                "id": 1,
                "type": "standard"
            },
            "created_at": "2015-04-27T18:37:52+09:00",
            "updated_at": "2015-04-27T18:42:52+09:00"
        }
        ```

### Update a store [PUT]

Requires store role.

+ Request

    + Body

        ```json
        {
            "name": "toranoko"
        }
        ```

+ Response 200

    + Body

        ```json
        {
            "id": 1,
            "name": "toranoko",
            "plan": {
                "id": 1,
                "type": "standard"
            },
            "created_at": "2015-04-27T18:37:52+09:00",
            "updated_at": "2015-04-27T18:42:52+09:00"
        }
        ```

## Store plan [/stores/{id}/plan]

### Update plan [PUT]

Updates the current pricing plan. Requires store role.
To upgrade to premium plan, credit card information is needed.

+ Request

    + Body

        ```json
        {
            "type": "premium"
        }
        ```

+ Response 204

# Group Store application

## Application [/stores/{id}/application]

+ Model

    + Body

        ```json
        {
            "status": "published",
            "version": "0.4.1",
            "configuration": "{\"theme\": \"brown\", \"plugins\": [\"news\", \"coupons\"]}"
        }
        ```

### Get application [GET]

Requires store permission. Get the store application

+ Response 200

    [Application][]


### Update application [PUT]

Requires store permission. Creates or updates the store application.

+ Request

    + Body

        ```json
        {
            "configuration": "{\"theme\": \"brown\"}"
        }
        ```

+ Response 200

    [Application][]
